\documentclass[a4paper]{article}
\usepackage{ucs}
\usepackage[utf8x]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[english]{babel}
\title{The \texttt{EMplm} package}
\author{Andrius Dalinkevi\v cius}
\usepackage{float}
\usepackage{rotating}
\usepackage[pdftex,bookmarks=TRUE]{hyperref}
\usepackage{float}
\usepackage{rotating}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{theorem}
\usepackage{calc}
\usepackage{graphicx}
\usepackage{lmodern}
\usepackage{bm}

\begin{document}

\maketitle
\newpage
\tableofcontents
\newpage

<<echo=FALSE, results=hide>>=
rm(list=ls())
#Sys.setlocale(locale="english")
library(xtable)
library(EMplm)

@

This is an introduction to usage of the \texttt{EMplm} package \footnote{The \texttt{EMplm} package can be installed from a local zip file in such a way: open \texttt{R}, go to \textit{Packages \textbackslash Install package(s) from local zip files...}.}. It is an extension of the \texttt{plm} package with forecasting methods and one function that calculates some in-sample forecasting accuracy measures for a given model. 

\section{The  panel model}
In this section some panel data models for which forecasting methods are created will be briefly examined\footnote{See ''Wooldridge (2001) - Econometric Analysis of Cross Section and Panel Data'' for details.}. 
\subsection{The linear panel data model}
Let's begin with the basic linear panel data model of the form:

\begin{equation}
  y_{it}=\alpha_{it}+\beta_{it}^Tx_{it}+u_{it},
\end{equation}  
where $i=1,...,N$ is the individual index, $t=1,...,T$ is the time index and $u_{it}$ a random disturbance of mean $0$. Various restrictions on this basic model yields a different panel data model. Here three types of model will be reminded.
\begin{itemize}
  \item \texttt{Pooling}. This model assumes parameters homogeneity, $\alpha_{it}=\alpha$ and $\beta_{it}=\beta$ for all  $i=1,...,N$ and $t=1,...,T$.
    \begin{equation}
      y_{it}=\alpha+\beta^Tx_{it}+u_{it}
    \end{equation}     
  \item \texttt{Fixed effects}. This is the unobserved effects model. It is assumed that an individual component, $\alpha_i$, is correlated with error term. So these effects are treated as a set of $N$ parameters to be estimated.
    \begin{equation}
      y_{it}=\alpha_i+\beta^Tx_{it}+u_{it}
    \end{equation}
In order to get consistent estimator of $\beta$ by OLS the fixed effects should be eliminated. The so called ''within'' transformation can be applied\footnote{''First-differencing'' can be applied too: $\Delta y_{it}=\beta^T\Delta x_{it}+ \Delta u_{it}$.}.
    \begin{equation}
      \ddot{y}_{it}=\beta^T\ddot{x}_{it}+\ddot{u}_{it},
    \end{equation}
where two dots above variables mean demeaned data.   
   \item \texttt{Random}. Here it is assumed that an individual effect is uncorrelated with regressors.
     \begin{equation}
       y_{it}=\alpha + \beta^Tx_{it}+v_{it},
     \end{equation}
where $v_{it}=\alpha_i+u_{it}$ is the composite error with an covariance structure: 
      \begin{equation}
        \Omega=E(v_iv_i^T)=
        \begin{pmatrix}
          \sigma_{\alpha}^2+\sigma_u^2 & \sigma_{\alpha}^2 & \ldots
          & \sigma_{\alpha}^2 \\
          \sigma_{\alpha}^2 & \sigma_{\alpha}^2+\sigma_u^2 & \ldots
          & \sigma_{\alpha}^2 \\
          \vdots & \vdots & \ddots
          & \vdots \\
          \sigma_{\alpha}^2 & \sigma_{\alpha}^2 & \ldots
          & \sigma_{\alpha}^2+\sigma_u^2
        \end{pmatrix}
      \end{equation}     
      where
      \begin{equation}
        \begin{array}{rl}
          &E(v_{it}^2)=\sigma_{\alpha}^2+\sigma_u^2\\
          &E(v_{it}v_{is})=\sigma_{\alpha}^2
        \end{array} 
      \end{equation}
As you see error terms $v_{it}$ are correlated that makes OLS estimation inefficient, but consistent. In order to get efficiency the model can be transformed as follow \footnote{GLS estimation can be used alternatively.}:
      \begin{equation}
        \begin{array}{rl}
          &(y_{it}-\lambda\bar{y})=\beta^T(x_{it}-\lambda\bar{x})+(v_{it}-\lambda\bar{v})\\
          &\check{y}_{it}=\beta^T\check{x}_{it}+\check{v}_{it}
        \end{array}
      \end{equation}   
where $\lambda=1-[\sigma_u^2(\sigma_u^2+T\sigma_{\alpha}^2)]^{1/2}$.      
\end{itemize}  

\subsection{The dynamic panel data model}
The model has the following form:
\begin{equation}
  y_{it}=\rho y_{it-1}+\beta^Tx_{it}+\alpha_i+u_{it}
\end{equation}
The model is first differenced to get rid of the individual effect:
\begin{equation}\label{pgmm}
  \Delta y_{it}=\rho\Delta y_{it-1}+\Delta\beta^Tx_{it}+\Delta u_{it}
\end{equation}
The error term $\Delta u_{it}$ is correlated with the term $\Delta y_{it-1}$. The least squares are inconsistent and an instrumental variable estimation method are required. The \texttt{plm} package contains the function \textit{pgmm} that provides a generalized methods of moments procedure that can be applied for estimating \ref{pgmm}.   

\section{Forecast methods}
\subsection{plm object}

\begin{enumerate}
\item Fitted function. It basically remains unchanged\footnote{Comparing with \textit{fitted} function from \texttt{plm} package.} except some default settings. There are three main parameters:
  \begin{itemize}
    \item object - the plm object for which fitted values are required.
    \item model - transformation used for the fitted values. In contradiction to the \texttt{plm}\footnote{If the parameter is not supplied then it takes the fitted model value.} package, the default is ''pooling''. 
    \item output - defines the output format. Two options: ''pseries'' or ''pdata.frame''.  
  \end{itemize}  
  
<<echo=TRUE>>=
data(Produc)
m1<-plm(log(gsp)~log(pcap)+log(emp),data=Produc,model="pooling")
fit<-fitted(m1,model="pooling",output="pdata.frame")
head(fit)
@ 

  Or the fitted values can be transformed:

<<echo=TRUE>>=
fit<-fitted(m1,model="within",output="pdata.frame")
head(fit)
@ 
\item Forecast function. It is a new function. Note that this function is suitable for only ''pooling'', ''within'' and ''random'' panel data models yet. There are some parameters to be explained:
  \begin{itemize}
    \item object - the plm object for which fitted values are required.
    \item newdata - an optional data.frame that is used in prediction.
    \item horizon - the time horizon for the forecast. Must be character with values presented in the pdim attribute of data.  
    \item inverse - if the left-hand side variable is transformed for estimation, the inverse transformation can be supplied.
    \item index - indexes.  
    \item levels - meaningful than a panel data model is estimated in first differences. If FALSE then results are returned in first differences and in levels otherwise.
    \item ... - further arguments.  
  \end{itemize}  
  Suppose that you have a fixed effects model in logs. A forecast in logs and in within transformation is:
<<echo=TRUE>>=
m2<-plm(log(gsp)~log(pcap)+log(emp),data=Produc[Produc["year"]==c(1970:1978),],model="within")
forec<-forecast(m2,newdata=Produc[Produc["year"]==c(1979:1980),],horizon=as.character(c(1979:1980)),model="within",output="pdata.frame")
head(forec)
@
  If a forecast of original left-hand side variable is desired:
<<echo=TRUE>>=
forec<-forecast(m2,newdata=Produc[Produc["year"]==c(1979:1980),],horizon=as.character(c(1979:1980)),model="pooling",inverse=exp,output="pdata.frame")
head(forec) 
@ 
  Suppose that you have a random effects model in first differences. A forecast in levels:
<<echo=TRUE>>=
m3<-plm(diff(gsp)~diff(pcap)+diff(emp),data=Produc[Produc["year"]==c(1970:1978),],model="pooling")
forec<-forecast(m3,newdata=Produc,horizon=as.character(c(1979:1980)),levels=TRUE,model="pooling",output="pdata.frame")
head(forec)
@   
\end{enumerate}
\subsection{pgmm object}

The following example is from Arellano and Bond (1991):
<<echo=TRUE>>=
data("EmplUK")
z1 <- pgmm(log(emp) ~ lag(log(emp), 1:2) + lag(log(wage), 0:1)+ log(capital) + lag(log(output), 0:1) | lag(log(emp), 2:99),data = EmplUK, effect = "twoways", model = "twosteps")
fz1 <- forecast(z1,EmplUK,horizon=as.character(1980:1982),inverse=exp,output="pdata.frame")
@      
Note that a forecast function has less parameters for the object ''pgmm'' than for ''plm''\footnote{See help("forecast.pgmm").}.
\section{Predict method}
Method predict acts as a wrapper method. It calls fitted if
no data is supplied to retrieve fitted values and forecast if
data is supplied with which to predict.

<<echo=TRUE>>=
pred1<-predict(m3,newdata=Produc,horizon=as.character(c(1979:1980)),levels=TRUE,model="pooling",output="pdata.frame")# forecasting
pred2<-fz1 <- predict(z1,inverse=exp,output="pdata.frame")#fitting
@ 
\section{Stats method}

The function \textit{stats} computes four in-sample forecasting accuracy measures: the R squared, MASE, MAPE and MAE. It is suitable for ''pgmm'' and ''plm'' objects. There are some arguments:

\begin{itemize}
\item object: an object of class ''plm'' or ''pgmm'';
\item freq: the frequency of data, default is 1;
\item ...: other arguments to be passed to 'fitted' function.  
\end{itemize}  

<<echo=TRUE>>=
s<-stats(m1)
head(s)
@ 

\end{document}



